// Generated by CoffeeScript 1.11.1
(function() {
  var ddp;

  ddp = new RxDDP('wss://www.discover-jeju.com/websocket');

  ddp.connect().subscribe(function() {
    var loginButton, tours$;
    document.getElementById('connecting').classList.add('숨김');
    document.getElementById('signInForm').classList.remove('숨김');
    loginButton = document.getElementById('login');
    Rx.Observable.fromEvent(loginButton, 'click').subscribe(function(e) {
      var isLoggedIn$, login$, users$;
      e.preventDefault();
      login$ = ddp.callStream('login', [
        {
          user: {
            username: loginForm.username.value
          },
          password: {
            digest: SHA256(loginForm.password.value),
            algorithm: 'sha-256'
          }
        }
      ]);
      login$.subscribe(function(o) {
        return console.log("login", o);
      });
      users$ = ddp.getCollection('users').filter(function(o) {
        return o.msg === "added";
      });
      isLoggedIn$ = login$.combineLatest(users$).filter(function(arg) {
        var login, users;
        login = arg[0], users = arg[1];
        return login.id === users.id;
      });
      return isLoggedIn$.subscribe(function() {
        console.log('logged in');
        document.getElementById('signInForm').classList.add('숨김');
        loginButton.classList.remove('안됨');
        loginButton.removeAttribute('disabled');
        login$.unsubscribe();
        users$.unsubscribe();
        return isLoggedIn$.unsubscribe();
      });
    });
    ddp.subscribeStream('getFeaturedTour').subscribe(console.log);
    tours$ = ddp.getCollection('tours').filter(function(o) {
      return o.msg === 'added';
    }).map(function(o) {
      return o.fields;
    });
    document.getElementById('tours').innerHTML = '';
    return tours$.subscribe(function(tour) {
      var toursList;
      toursList = document.getElementById('tours');
      return toursList.innerHTML = toursList.innerHTML + "\n<dt>" + tour.title + "</dt><dd>" + tour.subtitle + "</dd>";
    });
  });

  ddp.closeObservable.subscribe(function(o) {
    return console.log("disconnected", o);
  });

}).call(this);

//# sourceMappingURL=client.js.map
